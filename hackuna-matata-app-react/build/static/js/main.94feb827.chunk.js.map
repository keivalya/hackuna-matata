{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","AlertMessage","setAlertMessage","FrontDistance","setFrontDistance","BackDistance","setBackDistance","useEffect","setTimeout","axios","get","then","response","notLoaded","Message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQA0CeA,EAtCH,WAAO,IAAD,EACwBC,mBAAS,WADjC,mBACTC,EADS,KACKC,EADL,OAE0BF,mBAAS,GAFnC,mBAETG,EAFS,KAEMC,EAFN,OAGwBJ,mBAAS,GAHjC,mBAGTK,EAHS,KAGKC,EAHL,KAIhBC,qBAAU,WACRC,YAAW,WACTC,IAAMC,IAAI,8BAA8BC,MAAK,SAACC,GAC5CR,EAAiBQ,EAAST,eAC1BG,EAAgBM,EAASP,cACH,KAAlBF,GAAyC,KAAjBE,EAC1BH,EAAgB,QACPU,EAASC,UAClBX,EAAgB,WAEhBA,EAAgB,iBAGnB,OACF,CAACC,EAAeE,IAEnB,IAAMS,EAAU,WACd,OACE,oDACoBX,EAClB,uBACA,uBAHF,kBAIkBE,MAItB,OACE,gCACE,cAACS,EAAD,IACA,6BAAKb,QCzBIc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.94feb827.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport './App.css'\n\nconst App = () => {\n  const [AlertMessage, setAlertMessage] = useState('Loading')\n  const [FrontDistance, setFrontDistance] = useState(0)\n  const [BackDistance, setBackDistance] = useState(0)\n  useEffect(() => {\n    setTimeout(() => {\n      axios.get('http://localhost:9000/data').then((response) => {\n        setFrontDistance(response.FrontDistance)\n        setBackDistance(response.BackDistance)\n        if (FrontDistance === 55 && BackDistance === 55) {\n          setAlertMessage('GOOD')\n        } else if (response.notLoaded) {\n          setAlertMessage('Loading')\n        } else {\n          setAlertMessage('NOT GOOD')\n        }\n      })\n    }, 2000)\n  }, [FrontDistance, BackDistance])\n\n  const Message = () => {\n    return (\n      <div>\n        Front Distance - {FrontDistance}\n        <br />\n        <br />\n        Back Distance -{BackDistance}\n      </div>\n    )\n  }\n  return (\n    <div>\n      <Message />\n      <h1>{AlertMessage}</h1>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}